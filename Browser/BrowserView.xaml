<Window x:Class="Browser.BrowserView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Browser"
        xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        mc:Ignorable="d"

		Name="BrowserWindow"

        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"

        Foreground="{StaticResource SystemControlPageTextBaseHighBrush}"
		Background="{StaticResource SystemControlPageBackgroundAltHighBrush}"
		BorderBrush="{StaticResource WindowBorder}"
		BorderThickness="1"
		FontFamily="{StaticResource ContentControlThemeFontFamily}"
		FontSize="{StaticResource ControlContentThemeFontSize}"
		UseLayoutRounding="True"

        ui:ThemeManager.IsThemeAware="True"
        ui:TitleBar.Background="Transparent"
		ui:TitleBar.Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}" 
		ui:TitleBar.InactiveBackground="Transparent" 
		ui:TitleBar.InactiveForeground="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" 
		ui:TitleBar.BackButtonStyle="{StaticResource TitleBarBackButtonStyle}" 
		ui:WindowHelper.FixMaximizedWindow="True" 

        d:DataContext="{Binding ViewModel, ElementName=BrowserWindow}"

		Height="450" Width="800">

	<!--
	these break the app:
	
	WindowChrome.WindowChrome="{DynamicResource DefaultWindowChrome}"
	-->

	<!-- 
	xmlns:ui="http://schemas.modernwpf.com/2019"
	ui:WindowHelper.UseModernWindowStyle="True"
	-->

	<Window.InputBindings>
		<KeyBinding Key="F2" Command="{Binding ScreenshotCommand}" />
		<KeyBinding Key="F5" Command="{Binding RefreshCommand}" />
		<KeyBinding Modifiers="Control" Key="F5" Command="{Binding HardRefreshCommand}" />
		<KeyBinding Key="F7" Command="{Binding MuteCommand}" />
		<KeyBinding Key="F12" Command="{Binding OpenDevtoolsCommand}" />
	</Window.InputBindings>

	<Window.Resources>
		<Style x:Key="DownArrow" TargetType="{x:Type Path}">
			<Setter Property="Margin" Value="4" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Width" Value="6" />
			<Setter Property="Fill" Value="{DynamicResource TextControlForeground}" />
			<Setter Property="Stretch" Value="Uniform" />
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="Data" Value="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " />
		</Style>

		<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}" TargetType="MenuItem">
			<Grid
            x:Name="ContentRoot"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Viewbox
						x:Name="IconRoot"
						Grid.Column="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Width="16"
						Height="16"
						Margin="4 0 0 0">
					<ContentPresenter
							x:Name="IconContent"
							ContentSource="Icon"
							HorizontalAlignment="Center"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				</Viewbox>
				<Border Grid.Column="0" Grid.ColumnSpan="2"
                x:Name="Background"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}" />

				<ContentPresenter Grid.Column="1"
                ContentSource="Header"
                RecognizesAccessKey="True"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Margin="0 0 4 0"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

				<ui:MenuPopup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Focusable="false"
                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                Placement="Bottom">
					<ui:ThemeShadowChrome
                    IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"
                    CornerRadius="{DynamicResource OverlayCornerRadius}">
						<Border
                        x:Name="SubMenuRoot"
                        Background="{DynamicResource MenuFlyoutPresenterBackground}"
                        CornerRadius="{DynamicResource OverlayCornerRadius}">
							<Grid>
								<ScrollViewer
                                x:Name="SubMenuScrollViewer"
                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                Margin="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                MinWidth="{DynamicResource FlyoutThemeMinWidth}">
									<ItemsPresenter
                                    RenderOptions.ClearTypeHint="Enabled"
                                    Margin="{StaticResource MenuFlyoutScrollerMargin}"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    Grid.IsSharedSizeScope="true"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</ScrollViewer>
								<Border
                                x:Name="SubMenuBorder"
                                BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                                BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                                CornerRadius="{DynamicResource OverlayCornerRadius}" />
							</Grid>
						</Border>
					</ui:ThemeShadowChrome>
				</ui:MenuPopup>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="IconRoot" Value="Collapsed" />
				</Trigger>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
				</Trigger>
				<Trigger SourceName="PART_Popup" Property="IsSuspendingAnimation" Value="true">
					<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPointerOver}" />
					<Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPointerOver}" />
					<Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuBarItemBorderBrushPointerOver}" />
				</Trigger>
				<!-- Selected -->
				<Trigger Property="IsSubmenuOpen" Value="True">
					<Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
					<Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushSelected}" />
					<Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuBarItemBorderBrushSelected}" />
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPressed}" />
					<Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPressed}" />
					<Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuBarItemBorderBrushPressed}" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}" TargetType="MenuItem">
			<Border x:Name="Background"
			        Background="{TemplateBinding Background}"
			        BorderThickness="{TemplateBinding BorderThickness}"
			        BorderBrush="{TemplateBinding BorderBrush}">
			<Grid
				x:Name="ContentRoot"
				Background="{TemplateBinding Background}"
				SnapsToDevicePixels="True">

				<Grid.ColumnDefinitions>
					<ColumnDefinition SharedSizeGroup="{TemplateBinding Visibility, Converter={StaticResource SharedSizeGroupConverter}, ConverterParameter=MenuItemIconColumnGroup}" Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Viewbox
					x:Name="IconRoot"
					Grid.Column="0"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Width="16"
					Height="16"
					Margin="4">
					<ContentPresenter
						x:Name="IconContent"
						ContentSource="Icon"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				</Viewbox>

				<ContentPresenter Grid.Column="1"
				                  ContentSource="Header"
				                  RecognizesAccessKey="True"
				                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				                  Margin="0"
				                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Grid>
					</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="IconRoot" Value="Collapsed" />
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPointerOver}" />
					<Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPointerOver}" />
					<Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuBarItemBorderBrushPointerOver}" />
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPressed}" />
					<Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource MenuBarItemBorderBrushPressed}" />
					<Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuBarItemBorderBrushPressed}" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

	</Window.Resources>

	<Grid>

	<DockPanel>
		<Menu Height="Auto" DockPanel.Dock="{Binding ToolMenuDock}" Visibility="{Binding ToolMenuVisibility}" Background="{DynamicResource SystemControlBackgroundAltHighBrush}">
			<Menu.Resources>
				<Style TargetType="MenuItem" BasedOn="{StaticResource DefaultMenuItemStyle}">
					<Setter Property="FontSize" Value="12" />
				</Style>
			</Menu.Resources>
			<Menu.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="{Binding ToolMenuOrientation}" />
				</ItemsPanelTemplate>
			</Menu.ItemsPanel>
			<MenuItem Height="Auto" Command="{Binding ScreenshotCommand}">
				<MenuItem.Icon>
					<Image Source="{Binding Icons.Screenshot}" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Height="Auto">
				<MenuItem.Icon>
					<Image Source="{Binding Icons.Zoom}" />
				</MenuItem.Icon>
				<MenuItem.Header>
					<Path Style="{DynamicResource DownArrow}"/>
				</MenuItem.Header>
				<MenuItem Header="{Binding CurrentZoom}" IsEnabled="False" />
				<Separator/>
				<MenuItem Header="{Binding FormBrowser.Zoom_to_Fit}" IsChecked="{Binding ZoomFit}" IsCheckable="True" />
				<Separator/>
				<MenuItem Header="-20%" Command="{Binding ModifyZoomCommand}" CommandParameter="-0.2" >
					<MenuItem.Icon>
						<Image Source="{Binding Icons.ZoomOut}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="+20%" Command="{Binding ModifyZoomCommand}" CommandParameter="0.2">
					<MenuItem.Icon>
						<Image Source="{Binding Icons.ZoomIn}"/>
					</MenuItem.Icon>
				</MenuItem>
				<Separator/>
				<MenuItem Header="25%" Command="{Binding SetZoomCommand}" CommandParameter="0.25" />
				<MenuItem Header="50%" Command="{Binding SetZoomCommand}" CommandParameter="0.5" />
				<MenuItem Header="67% (Classic)" Command="{Binding SetZoomCommand}" CommandParameter="0.67"/>
				<MenuItem Header="75%" Command="{Binding SetZoomCommand}" CommandParameter="0.75" />
				<Separator/>
				<MenuItem Header="100%" Command="{Binding SetZoomCommand}" CommandParameter="1"/>
				<Separator/>
				<MenuItem Header="150%" Command="{Binding SetZoomCommand}" CommandParameter="1.5" />
				<MenuItem Header="200%" Command="{Binding SetZoomCommand}" CommandParameter="2" />
				<MenuItem Header="250%" Command="{Binding SetZoomCommand}" CommandParameter="2.5" />
				<MenuItem Header="300%" Command="{Binding SetZoomCommand}" CommandParameter="3" />
				<MenuItem Header="400%" Command="{Binding SetZoomCommand}" CommandParameter="4" />
			</MenuItem>
			<MenuItem Height="Auto" Command="{Binding MuteCommand}">
				<MenuItem.Icon>
					<Image Source="{Binding MuteStateImage}" />
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Height="Auto" Command="{Binding RefreshCommand}">
				<MenuItem.Icon>
					<Image Source="{Binding Icons.Refresh}"/>
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Height="Auto" Command="{Binding GoToLoginPageCommand}">
				<MenuItem.Icon>
					<Image Source="{Binding Icons.Navigate}"/>
				</MenuItem.Icon>
			</MenuItem>
			<MenuItem Height="Auto">
				<MenuItem.Icon>
					<Image Source="{Binding Icons.Other}"/>
				</MenuItem.Icon>
				<MenuItem.Header>
					<Path Style="{DynamicResource DownArrow}"/>
				</MenuItem.Header>
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_ScreenShot}" Command="{Binding ScreenshotCommand}" InputGestureText="F2">
					<MenuItem.Icon>
						<Image Source="{Binding Icons.Screenshot}" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_LastScreenShot}" d:Header="Previous Screenshot">
					<MenuItem Height="Auto" Width="Auto" ContextMenuOpening="FrameworkElement_OnContextMenuOpening">
						<MenuItem.Header>
							<Grid>
								<TextBlock Text="{Binding FormBrowser.NoScreenshotYet}"/>
								<Image Width="600" Height="360" Source="{Binding LastScreenShotPath}">
									<Image.InputBindings>
										<MouseBinding Gesture="LeftClick" Command="{Binding OpenLastScreenshotCommand}" />
									</Image.InputBindings>
								</Image>
							</Grid>
						</MenuItem.Header>
					</MenuItem>
					<Separator />
					<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_LastScreenShot_OpenScreenShotFolder}" Command="{Binding OpenScreenshotFolderCommand}" />
					<MenuItem Header="{Binding FormBrowser.LastScreenShot_CopyToClipboard}" Command="{Binding CopyLastScreenshotCommand}" />
				</MenuItem>
				<Separator />
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_Zoom}">
					<MenuItem.Icon>
						<Image Source="{Binding Icons.Zoom}" />
					</MenuItem.Icon>
					<MenuItem Header="{Binding CurrentZoom}" IsEnabled="False" />
					<Separator/>
					<MenuItem Header="{Binding FormBrowser.Zoom_to_Fit}" IsChecked="{Binding ZoomFit}" IsCheckable="True" />
					<Separator/>
					<MenuItem Header="-20%" Command="{Binding ModifyZoomCommand}" CommandParameter="-0.2" >
						<MenuItem.Icon>
							<Image Source="{Binding Icons.ZoomOut}"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="+20%" Command="{Binding ModifyZoomCommand}" CommandParameter="0.2">
						<MenuItem.Icon>
							<Image Source="{Binding Icons.ZoomIn}"/>
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="25%" Command="{Binding SetZoomCommand}" CommandParameter="0.25" />
					<MenuItem Header="50%" Command="{Binding SetZoomCommand}" CommandParameter="0.5" />
					<MenuItem Header="67% (Classic)" Command="{Binding SetZoomCommand}" CommandParameter="0.67"/>
					<MenuItem Header="75%" Command="{Binding SetZoomCommand}" CommandParameter="0.75" />
					<Separator/>
					<MenuItem Header="100%" Command="{Binding SetZoomCommand}" CommandParameter="1"/>
					<Separator/>
					<MenuItem Header="150%" Command="{Binding SetZoomCommand}" CommandParameter="1.5" />
					<MenuItem Header="200%" Command="{Binding SetZoomCommand}" CommandParameter="2" />
					<MenuItem Header="250%" Command="{Binding SetZoomCommand}" CommandParameter="2.5" />
					<MenuItem Header="300%" Command="{Binding SetZoomCommand}" CommandParameter="3" />
					<MenuItem Header="400%" Command="{Binding SetZoomCommand}" CommandParameter="4" />
				</MenuItem>
				<Separator />
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_Volume}" d:Header="Volume">
					<MenuItem>
						<MenuItem.Header>
							<StackPanel Orientation="Horizontal">
								<ui:NumberBox Value="{Binding Volume}" Minimum="0" Maximum="100" Margin="4" />
								<Slider
									Value="{Binding Volume}"
							        Width="200" 
							        Minimum="0" 
							        Maximum="100"
								/>
							</StackPanel>
						</MenuItem.Header>
					</MenuItem>
				</MenuItem>
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_Mute}" Command="{Binding MuteCommand}" InputGestureText="F7">
					<MenuItem.Icon>
						<Image Source="{Binding MuteStateImage}" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_Refresh}" Command="{Binding RefreshCommand}" InputGestureText="F5">
					<MenuItem.Icon>
						<Image Source="{Binding Icons.Refresh}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Binding FormBrowser.RefreshIgnoreCache}" Command="{Binding HardRefreshCommand}" InputGestureText="Ctrl+F5" d:Header="Hard Refresh" />
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_NavigateToLogInPage}" Command="{Binding GoToLoginPageCommand}">
					<MenuItem.Icon>
						<Image Source="{Binding Icons.Navigate}"/>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_Navigate}" Command="{Binding GoToCommand}" />
				<MenuItem Header="{Binding FormBrowser.ClearCache}" Command="{Binding ClearCacheCommand}" />
				<Separator />
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_AppliesStyleSheet}"
					IsChecked="{Binding StyleSheetEnabled}"
					IsCheckable="True"
				/>
				<Separator />
				<MenuItem Header="{Binding FormBrowser.ToolMenu_Other_Alignment}" d:Header="Alignment" >
					<MenuItem Header="{Binding FormBrowser.Alignment_Top}" Command="{Binding SetToolMenuAlignmentCommand}" d:Header="Top">
						<MenuItem.CommandParameter >
							<Dock>Top</Dock>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Header="{Binding FormBrowser.Alignment_Bottom}" Command="{Binding SetToolMenuAlignmentCommand}" d:Header="Bottom">
						<MenuItem.CommandParameter >
							<Dock>Bottom</Dock>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Header="{Binding FormBrowser.Alignment_Left}" Command="{Binding SetToolMenuAlignmentCommand}" d:Header="Left">
						<MenuItem.CommandParameter >
							<Dock>Left</Dock>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Header="{Binding FormBrowser.Alignment_Right}" Command="{Binding SetToolMenuAlignmentCommand}" d:Header="Right">
						<MenuItem.CommandParameter >
							<Dock>Right</Dock>
						</MenuItem.CommandParameter>
					</MenuItem>
					<MenuItem Header="{Binding FormBrowser.Alignment_Invisible}" Command="{Binding SetToolMenuVisibilityCommand}" d:Header="Invisible">
						<MenuItem.CommandParameter>
							<Visibility>Collapsed</Visibility>
						</MenuItem.CommandParameter>
					</MenuItem>
				</MenuItem>
				<MenuItem Header="{Binding FormBrowser.OpenDevTool}"
				Command="{Binding OpenDevtoolsCommand}"
				InputGestureText="F12"

				d:Header="Developer Tools" />
			</MenuItem>
		</Menu>

		<Border
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Background="{DynamicResource SystemControlBackgroundAltHighBrush}"
		>
			<Border.InputBindings>
				<MouseBinding Gesture="LeftDoubleClick" Command="{Binding SetToolMenuVisibilityCommand}">
					<MouseBinding.CommandParameter>
						<Visibility>Visible</Visibility>
					</MouseBinding.CommandParameter>
				</MouseBinding>
			</Border.InputBindings>

			<ContentControl
				Content="{Binding BrowserWrapper}"
				SizeChanged="FrameworkElement_OnSizeChanged">
				<!--
				<wpf:ChromiumWebBrowser
						x:Name="Browser" 
						Address="http://www.dmm.com/netgame/social/-/gadgets/=/app_id=854854/" 
						FontFamily="Microsoft YaHei" />
				-->
			</ContentControl>
		</Border>
	</DockPanel>


	</Grid>
</Window>

