<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="AABase" xml:space="preserve">
    <value>Base AA</value>
  </data>
	<data name="AARemain" xml:space="preserve">
    <value>AA Remaining</value>
  </data>
	<data name="AATotal" xml:space="preserve">
    <value>Total AA</value>
  </data>
	<data name="AirBattlePower" xml:space="preserve">
    <value>Aerial Power</value>
  </data>
	<data name="AircraftPower" xml:space="preserve">
    <value>Aircraft Power</value>
  </data>
	<data name="AircraftRate1" xml:space="preserve">
    <value>Aircraft #1 Percentage</value>
  </data>
	<data name="AircraftRate2" xml:space="preserve">
    <value>Aircraft #2 Percentage</value>
  </data>
	<data name="AircraftRate3" xml:space="preserve">
    <value>Aircraft #3 Percentage</value>
  </data>
	<data name="AircraftRate4" xml:space="preserve">
    <value>Aircraft #4 Percentage</value>
  </data>
	<data name="AircraftRate5" xml:space="preserve">
    <value>Aircraft #5 Percentage</value>
  </data>
	<data name="AircraftRateTotal" xml:space="preserve">
    <value>Aircraft Total Percentage</value>
  </data>
	<data name="AircraftSlot1" xml:space="preserve">
    <value>Aircraft #1</value>
  </data>
	<data name="AircraftSlot2" xml:space="preserve">
    <value>Aircraft #2</value>
  </data>
	<data name="AircraftSlot3" xml:space="preserve">
    <value>Aircraft #3</value>
  </data>
	<data name="AircraftSlot4" xml:space="preserve">
    <value>Aircraft #4</value>
  </data>
	<data name="AircraftSlot5" xml:space="preserve">
    <value>Aircraft #5</value>
  </data>
	<data name="AircraftTotal" xml:space="preserve">
    <value>Aircraft Total</value>
  </data>
	<data name="AlbumNo" xml:space="preserve">
    <value>Album No.</value>
  </data>
	<data name="AllSlotMaster" xml:space="preserve">
    <value>Equipments</value>
  </data>
	<data name="Ammo" xml:space="preserve">
    <value>Ammo</value>
  </data>
	<data name="AmmoMax" xml:space="preserve">
    <value>Max Ammo</value>
  </data>
	<data name="AmmoRate" xml:space="preserve">
    <value>Ammo Percentage</value>
  </data>
	<data name="ArmorBase" xml:space="preserve">
    <value>Base Armor</value>
  </data>
	<data name="ArmorRemain" xml:space="preserve">
    <value>Armor Remaining</value>
  </data>
	<data name="ArmorTotal" xml:space="preserve">
    <value>Total Armor</value>
  </data>
	<data name="ASWBase" xml:space="preserve">
    <value>Base ASW</value>
  </data>
	<data name="ASWPower" xml:space="preserve">
    <value>ASW Power</value>
  </data>
	<data name="ASWTotal" xml:space="preserve">
    <value>Total ASW</value>
  </data>
	<data name="BomberTotal" xml:space="preserve">
    <value>Total Bombers</value>
  </data>
	<data name="Condition" xml:space="preserve">
    <value>Condition</value>
  </data>
	<data name="EquippableCategories" xml:space="preserve">
    <value>Equippable Categories</value>
  </data>
	<data name="EvasionBase" xml:space="preserve">
    <value>Base Evasion</value>
  </data>
	<data name="EvasionTotal" xml:space="preserve">
    <value>Total Evasion</value>
  </data>
	<data name="ExpansionSlotMaster" xml:space="preserve">
    <value>Expansion Slot Equipment</value>
  </data>
	<data name="ExpNext" xml:space="preserve">
    <value>Exp Next</value>
  </data>
	<data name="ExpNextRemodel" xml:space="preserve">
    <value>Exp to Next Remodel</value>
  </data>
	<data name="ExpTotal" xml:space="preserve">
    <value>Exp Total</value>
  </data>
	<data name="FirePowerBase" xml:space="preserve">
    <value>Base Firepower</value>
  </data>
	<data name="FirePowerRemain" xml:space="preserve">
    <value>Firepower Remaining</value>
  </data>
	<data name="FirePowerTotal" xml:space="preserve">
    <value>Total Firepower</value>
  </data>
	<data name="FleetWithIndex" xml:space="preserve">
    <value>Fleet Index</value>
  </data>
	<data name="Fuel" xml:space="preserve">
    <value>Fuel</value>
  </data>
	<data name="FuelMax" xml:space="preserve">
    <value>Max Fuel</value>
  </data>
	<data name="FuelRate" xml:space="preserve">
    <value>Fuel Percentage</value>
  </data>
	<data name="HPCurrent" xml:space="preserve">
    <value>Current HP</value>
  </data>
	<data name="HPMax" xml:space="preserve">
    <value>Max HP</value>
  </data>
	<data name="HPRate" xml:space="preserve">
    <value>HP Percentage</value>
  </data>
	<data name="IsLocked" xml:space="preserve">
    <value>Locked</value>
  </data>
	<data name="IsLockedByEquipment" xml:space="preserve">
    <value>Locked By Equipment</value>
  </data>
	<data name="IsMarried" xml:space="preserve">
    <value>Married</value>
  </data>
	<data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
	<data name="LOSBase" xml:space="preserve">
    <value>Base LOS</value>
  </data>
	<data name="LOSTotal" xml:space="preserve">
    <value>Total LOS</value>
  </data>
	<data name="LuckBase" xml:space="preserve">
    <value>Base Luck</value>
  </data>
	<data name="LuckRemain" xml:space="preserve">
    <value>Luck Remaining</value>
  </data>
	<data name="LuckTotal" xml:space="preserve">
    <value>Total Luck</value>
  </data>
	<data name="MasterAircraft1" xml:space="preserve">
    <value>Max Aircraft #1</value>
  </data>
	<data name="MasterAircraft2" xml:space="preserve">
    <value>Max Aircraft #2</value>
  </data>
	<data name="MasterAircraft3" xml:space="preserve">
    <value>Max Aircraft #3</value>
  </data>
	<data name="MasterAircraft4" xml:space="preserve">
    <value>Max Aircraft #4</value>
  </data>
	<data name="MasterAircraft5" xml:space="preserve">
    <value>Max Aircraft #5</value>
  </data>
	<data name="MasterAircraftTotal" xml:space="preserve">
    <value>Max Aircraft Total</value>
  </data>
	<data name="MasterID" xml:space="preserve">
    <value>MasterID</value>
  </data>
	<data name="MasterRarity" xml:space="preserve">
    <value>Rarity</value>
  </data>
	<data name="MasterSpeed" xml:space="preserve">
    <value>Base Speed</value>
  </data>
	<data name="NameReading" xml:space="preserve">
    <value>Name Reading</value>
  </data>
	<data name="NameWithClass" xml:space="preserve">
    <value>Name With Class</value>
  </data>
	<data name="NightBattlePower" xml:space="preserve">
    <value>Night Battle Power</value>
  </data>
	<data name="Range" xml:space="preserve">
    <value>Range</value>
  </data>
	<data name="RemodelAfterShipID" xml:space="preserve">
    <value>Ship ID After Remodel</value>
  </data>
	<data name="RemodelBeforeShipID" xml:space="preserve">
    <value>Ship ID Before Remodel</value>
  </data>
	<data name="RepairFuel" xml:space="preserve">
    <value>Repair Fuel</value>
  </data>
	<data name="RepairingDockID" xml:space="preserve">
    <value>Dock ID</value>
  </data>
	<data name="RepairSteel" xml:space="preserve">
    <value>Repair Steel</value>
  </data>
	<data name="RepairTime" xml:space="preserve">
    <value>Repair Time</value>
  </data>
	<data name="SallyArea" xml:space="preserve">
    <value>Event Area</value>
  </data>
	<data name="ShellingPower" xml:space="preserve">
    <value>Shelling Power</value>
  </data>
	<data name="ShipID" xml:space="preserve">
    <value>ShipID</value>
  </data>
	<data name="ShipType" xml:space="preserve">
    <value>Ship Type</value>
  </data>
	<data name="SlotMaster1" xml:space="preserve">
    <value>Equipment #1</value>
  </data>
	<data name="SlotMaster2" xml:space="preserve">
    <value>Equipment #2</value>
  </data>
	<data name="SlotMaster3" xml:space="preserve">
    <value>Equipment #3</value>
  </data>
	<data name="SlotMaster4" xml:space="preserve">
    <value>Equipment #4</value>
  </data>
	<data name="SlotMaster5" xml:space="preserve">
    <value>Equipment #5</value>
  </data>
	<data name="SlotSize" xml:space="preserve">
    <value>Slots Count</value>
  </data>
	<data name="Speed" xml:space="preserve">
    <value>Speed</value>
  </data>
	<data name="StrArrayContains" xml:space="preserve">
    <value>Array Contains</value>
  </data>
	<data name="StrArrayNotContains" xml:space="preserve">
    <value>Array Not Contains</value>
  </data>
	<data name="StrBeginsWith" xml:space="preserve">
    <value>Begins With</value>
  </data>
	<data name="StrContains" xml:space="preserve">
    <value>Contains</value>
  </data>
	<data name="StrEndWith" xml:space="preserve">
    <value>End With</value>
  </data>
	<data name="StrEquals" xml:space="preserve">
    <value>==</value>
  </data>
	<data name="StrLessEquals" xml:space="preserve">
    <value>&lt;=</value>
  </data>
	<data name="StrLessThan" xml:space="preserve">
    <value>&lt;</value>
  </data>
	<data name="StrMoreEquals" xml:space="preserve">
    <value>&gt;=</value>
  </data>
	<data name="StrMoreThan" xml:space="preserve">
    <value>&gt;</value>
  </data>
	<data name="StrNotBeginsWith" xml:space="preserve">
    <value>Not Begins With</value>
  </data>
	<data name="StrNotContains" xml:space="preserve">
    <value>Not Contains</value>
  </data>
	<data name="StrNotEndWith" xml:space="preserve">
    <value>Not End With</value>
  </data>
	<data name="StrNotEquals" xml:space="preserve">
    <value>!=</value>
  </data>
	<data name="TorpedoBase" xml:space="preserve">
    <value>Base Torpedo</value>
  </data>
	<data name="TorpedoPower" xml:space="preserve">
    <value>Torpedo Power</value>
  </data>
	<data name="TorpedoRemain" xml:space="preserve">
    <value>Torpedo Remaining</value>
  </data>
	<data name="TorpedoTotal" xml:space="preserve">
    <value>Total Torpedo</value>
  </data>
</root>