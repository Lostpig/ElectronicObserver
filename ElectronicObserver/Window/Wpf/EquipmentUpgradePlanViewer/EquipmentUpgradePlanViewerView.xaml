<UserControl
	x:Class="ElectronicObserver.Window.Wpf.EquipmentUpgradePlanViewer.EquipmentUpgradePlanViewerView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:common="clr-namespace:ElectronicObserver.Common"
	xmlns:costs="clr-namespace:ElectronicObserver.Window.Tools.EquipmentUpgradePlanner.CostCalculation"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="clr-namespace:ElectronicObserver.Window.Tools.EquipmentUpgradePlanner.Helpers"
	xmlns:local="clr-namespace:ElectronicObserver.Window.Wpf.EquipmentUpgradePlanViewer"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:persistentColumns="clr-namespace:ElectronicObserver.Behaviors.PersistentColumns"
	xmlns:resource="clr-namespace:ElectronicObserver.Resource"
	xmlns:upgradePlanner="clr-namespace:ElectronicObserver.Window.Tools.EquipmentUpgradePlanner"
	Width="auto"
	Height="auto"
	d:DataContext="{d:DesignInstance Type=local:EquipmentUpgradePlanViewerViewModel}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d"
	>

	<UserControl.Resources>
		<local:EquipmentUpgradePlanViewerViewBindingProxy x:Key="Proxy" DataContext="{Binding}" />


		<ContextMenu x:Key="OptionsContextMenu" DataContext="{StaticResource Proxy}">
			<MenuItem
				Header="{Binding DataContext.Translation.DisplayFinished}"
				IsCheckable="True"
				IsChecked="{Binding DataContext.Filters.DisplayFinished}"
				/>
		</ContextMenu>

		<Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="CheckBox">
			<Setter Property="Margin" Value="4 0" />
			<Setter Property="Padding" Value="2 0" />
			<Setter Property="MinWidth" Value="0" />
		</Style>

		<DataTemplate x:Key="CostTemplate" DataType="{x:Type costs:EquipmentUpgradePlanCostViewModel}">
			<Grid>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Grid.Resources>
					<Style TargetType="StackPanel">
						<Setter Property="Margin" Value="2 0" />
						<Style.Resources>
							<Style TargetType="TextBlock">
								<Style.Triggers>
									<DataTrigger Binding="{Binding EnoughOwned}" Value="False">
										<Setter Property="Foreground" Value="Red" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Style.Resources>
					</Style>
				</Grid.Resources>

				<StackPanel
					Grid.Row="0"
					Grid.Column="0"
					DataContext="{Binding Fuel}"
					Orientation="Horizontal"
					>
					<common:UseItemIcon Type="Fuel" />
					<TextBlock Margin="2 0" Text="{Binding Required}" />
				</StackPanel>

				<StackPanel
					Grid.Row="0"
					Grid.Column="1"
					DataContext="{Binding Ammo}"
					Orientation="Horizontal"
					>
					<common:UseItemIcon Type="Ammo" />
					<TextBlock Margin="2 0" Text="{Binding Required}" />
				</StackPanel>

				<StackPanel
					Grid.Row="0"
					Grid.Column="2"
					DataContext="{Binding Steel}"
					Orientation="Horizontal"
					>
					<common:UseItemIcon Type="Steel" />
					<TextBlock Margin="2 0" Text="{Binding Required}" />
				</StackPanel>

				<StackPanel
					Grid.Row="0"
					Grid.Column="3"
					DataContext="{Binding Bauxite}"
					Orientation="Horizontal"
					>
					<common:UseItemIcon Type="Bauxite" />
					<TextBlock Margin="2 0" Text="{Binding Required}" />
				</StackPanel>

				<StackPanel
					Grid.Row="1"
					Grid.Column="0"
					DataContext="{Binding DevelopmentMaterial}"
					Orientation="Horizontal"
					>
					<common:UseItemIcon Type="DevelopmentMaterial" />
					<TextBlock Margin="2 0" Text="{Binding Required}" />
				</StackPanel>

				<StackPanel
					Grid.Row="1"
					Grid.Column="2"
					DataContext="{Binding ImprovementMaterial}"
					Orientation="Horizontal"
					>
					<common:UseItemIcon Type="ImproveMaterial" />
					<TextBlock Margin="2 0" Text="{Binding Required}" />
				</StackPanel>

				<ItemsControl
					Grid.Row="2"
					Grid.Column="0"
					Grid.ColumnSpan="4"
					Background="Transparent"
					ItemsSource="{Binding RequiredEquipments}"
					>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<StackPanel Margin="4 4 0 0" Orientation="Horizontal">

								<StackPanel.Style>
									<Style TargetType="StackPanel">
										<Style.Resources>
											<Style TargetType="TextBlock">
												<Style.Triggers>
													<DataTrigger Binding="{Binding EnoughOwned}" Value="False">
														<Setter Property="Foreground" Value="Red" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Style.Resources>
									</Style>
								</StackPanel.Style>

								<TextBlock Text="{Binding Equipment.NameEN}" />
								<TextBlock Margin="4 0 0 0" Text="(" />
								<TextBlock Text="{Binding Owned}" />
								<TextBlock Text="/" />
								<TextBlock Text="{Binding Required}" />
								<TextBlock Text=")" />
							</StackPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

				<ItemsControl
					Grid.Row="3"
					Grid.Column="0"
					Grid.ColumnSpan="4"
					ItemsSource="{Binding RequiredConsumables}"
					>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<StackPanel Margin="4 4 0 0" Orientation="Horizontal">

								<StackPanel.Style>
									<Style TargetType="StackPanel">
										<Style.Resources>
											<Style TargetType="TextBlock">
												<Style.Triggers>
													<DataTrigger Binding="{Binding EnoughOwned}" Value="False">
														<Setter Property="Foreground" Value="Red" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Style.Resources>
									</Style>
								</StackPanel.Style>

								<TextBlock Text="{Binding Consumable.NameTranslated}" />
								<TextBlock Margin="4 0 0 0" Text="(" />
								<TextBlock Text="{Binding Owned}" />
								<TextBlock Text="/" />
								<TextBlock Text="{Binding Required}" />
								<TextBlock Text=")" />
							</StackPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="DetailedUpgradeDayDisplayTemplate" DataType="{x:Type upgradePlanner:EquipmentUpgradePlanItemViewModel}">

			<ItemsControl
				Margin="0 5"
				HorizontalAlignment="Center"
				ItemsSource="{Binding HelperViewModels}"
				>

				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Vertical">
							<StackPanel.Style>
								<Style TargetType="StackPanel">
									<Setter Property="Visibility" Value="Visible" />

									<Style.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding CanHelpToday}" Value="False" />
												<Condition Binding="{Binding DataContext.Filters.SelectToday, Source={StaticResource Proxy}}" Value="True" />
											</MultiDataTrigger.Conditions>

											<Setter Property="Visibility" Value="Collapsed" />
										</MultiDataTrigger>
									</Style.Triggers>


								</Style>
							</StackPanel.Style>

							<helpers:DetailedUpgradeHelperPerDayControl DataContext="{Binding}" />
						</StackPanel>
					</DataTemplate>
				</ItemsControl.ItemTemplate>

			</ItemsControl>
		</DataTemplate>

		<DataTemplate x:Key="EquipmentUpgradeToolTip" DataType="{x:Type upgradePlanner:EquipmentUpgradePlanItemViewModel}">
			<Grid>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>


				<ContentControl
					Grid.Row="0"
					Content="{Binding NextUpgradeCost}"
					ContentTemplate="{StaticResource CostTemplate}"
					/>

				<ContentControl
					Grid.Row="1"
					Content="{Binding}"
					ContentTemplate="{StaticResource DetailedUpgradeDayDisplayTemplate}"
					/>
			</Grid>
		</DataTemplate>

		<DataTemplate DataType="{x:Type local:EquipmentUpgradePlanViewerViewModel}">
			<Grid Background="Transparent" ContextMenu="{StaticResource OptionsContextMenu}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<StackPanel Grid.Row="0" Orientation="Horizontal">

					<CheckBox Content="{Binding Filters.TodayDisplay}" IsChecked="{Binding Filters.SelectToday}" />

					<CheckBox Content="{Binding Translation.All}" IsChecked="{Binding Filters.SelectAllDay}" />

					<ItemsControl ItemsSource="{Binding Filters.Days}">

						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<StackPanel Orientation="Horizontal" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>

						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<CheckBox Content="{Binding DisplayValue}" IsChecked="{Binding IsChecked}" />
								</StackPanel>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</StackPanel>

				<DataGrid
					Grid.Row="1"
					AutoGenerateColumns="False"
					ColumnWidth="90"
					HeadersVisibility="Column"
					IsReadOnly="True"
					ItemsSource="{Binding DataGridViewModel.Items, IsAsync=True}"
					>

					<DataGrid.ContextMenu>
						<ContextMenu>
							<MenuItem Command="{Binding DataGridViewModel.OpenColumnSelectorCommand}" Header="{Binding DataGridViewModel.DataGrid.OpenColumnSelector}" />
							<MenuItem Command="{Binding DataGridViewModel.ClearSortingCommand}" Header="{Binding DataGridViewModel.DataGrid.ClearSorting}" />
						</ContextMenu>
					</DataGrid.ContextMenu>

					<b:Interaction.Behaviors>
						<persistentColumns:PersistentColumnsBehavior ColumnProperties="{Binding DataGridViewModel.ColumnProperties}" SortDescriptions="{Binding DataGridViewModel.SortDescriptions}" />
					</b:Interaction.Behaviors>

					<DataGrid.ColumnHeaderStyle>
						<Style BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}">
							<Setter Property="Foreground" Value="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}" />
							<Setter Property="FontFamily" Value="{Binding DataContext.Font, Source={StaticResource Proxy}}" />
							<Setter Property="FontSize" Value="{Binding DataContext.FontSize, Source={StaticResource Proxy}}" />
							<Setter Property="ContextMenu">
								<Setter.Value>
									<ContextMenu>
										<MenuItem
											Command="{Binding DataContext.DataGridViewModel.HideColumnCommand, Source={StaticResource Proxy}}"
											CommandParameter="{Binding}"
											Header="{Binding DataContext.DataGridViewModel.DataGrid.HideColumn, Source={StaticResource Proxy}}"
											/>
										<Separator />
										<MenuItem Command="{Binding DataContext.DataGridViewModel.OpenColumnSelectorCommand, Source={StaticResource Proxy}}" Header="{Binding DataContext.DataGridViewModel.DataGrid.OpenColumnSelector, Source={StaticResource Proxy}}" />
										<MenuItem Command="{Binding DataContext.DataGridViewModel.ClearSortingCommand, Source={StaticResource Proxy}}" Header="{Binding DataContext.DataGridViewModel.DataGrid.ClearSorting, Source={StaticResource Proxy}}" />
									</ContextMenu>
								</Setter.Value>
							</Setter>
						</Style>
					</DataGrid.ColumnHeaderStyle>

					<DataGrid.RowStyle>
						<Style TargetType="DataGridRow">
							<Setter Property="Background" Value="#00FFFFFF" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding NextUpgradeCost.HasEnoughResources}" Value="False">
									<Setter Property="Background" Value="#AAFF0000" />
								</DataTrigger>

								<DataTrigger Binding="{Binding HasHelperForAtleastOneDayOfWeek}" Value="False">
									<Setter Property="Background" Value="#AAFF0000" />
								</DataTrigger>

								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding DataContext.Filters.SelectToday, Source={StaticResource Proxy}}" Value="True" />
										<Condition Binding="{Binding HasHelperForToday}" Value="False" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Background" Value="#AAFF0000" />
								</MultiDataTrigger>
							</Style.Triggers>
						</Style>
					</DataGrid.RowStyle>

					<DataGrid.Columns>
						<DataGridTextColumn
							Width="Auto"
							Binding="{Binding EquipmentName}"
							FontFamily="{Binding DataContext.Font, Source={StaticResource Proxy}}"
							FontSize="{Binding DataContext.FontSize, Source={StaticResource Proxy}}"
							Foreground="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}"
							Header="{Binding DataContext.Translation.Equipment, Source={StaticResource Proxy}}"
							>


							<DataGridTextColumn.CellStyle>
								<Style BasedOn="{StaticResource DefaultDataGridCellStyle}" TargetType="DataGridCell">
									<Setter Property="ToolTip">
										<Setter.Value>
											<ContentControl Content="{Binding}" ContentTemplate="{StaticResource EquipmentUpgradeToolTip}" />
										</Setter.Value>
									</Setter>
								</Style>
							</DataGridTextColumn.CellStyle>
						</DataGridTextColumn>

						<DataGridTextColumn
							Width="Auto"
							Binding="{Binding CurrentLevelDisplay}"
							FontFamily="{Binding DataContext.Font, Source={StaticResource Proxy}}"
							FontSize="{Binding DataContext.FontSize, Source={StaticResource Proxy}}"
							Foreground="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}"
							Header="{Binding DataContext.Translation.CurrentLevel, Source={StaticResource Proxy}}"
							>
							<DataGridTextColumn.CellStyle>
								<Style BasedOn="{StaticResource DefaultDataGridCellStyle}" TargetType="DataGridCell">
									<Setter Property="ToolTip" Value="{x:Null}" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Equipment.MasterID}" Value="0">
											<Setter Property="ToolTip" Value="{Binding DataContext.Translation.UnassignedToolTip, Source={StaticResource Proxy}}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</DataGridTextColumn.CellStyle>
						</DataGridTextColumn>

						<DataGridTextColumn
							Width="Auto"
							Binding="{Binding DesiredUpgradeLevel, Converter={StaticResource EnumDisplayConverter}}"
							FontFamily="{Binding DataContext.Font, Source={StaticResource Proxy}}"
							FontSize="{Binding DataContext.FontSize, Source={StaticResource Proxy}}"
							Foreground="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}"
							Header="{Binding DataContext.Translation.Goal, Source={StaticResource Proxy}}"
							/>

						<DataGridTextColumn
							Width="Auto"
							Binding="{Binding Priority}"
							FontFamily="{Binding DataContext.Font, Source={StaticResource Proxy}}"
							FontSize="{Binding DataContext.FontSize, Source={StaticResource Proxy}}"
							Foreground="{Binding DataContext.FontBrush, Source={StaticResource Proxy}}"
							Header="{Binding DataContext.Translation.Priority, Source={StaticResource Proxy}}"
							/>

						<DataGridCheckBoxColumn
							Width="Auto"
							Binding="{Binding Finished}"
							Header="{Binding DataContext.Translation.IsFinished, Source={StaticResource Proxy}}"
							/>

					</DataGrid.Columns>
				</DataGrid>
			</Grid>
		</DataTemplate>
	</UserControl.Resources>

	<ContentControl Content="{Binding}" />
</UserControl>
