<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="File" xml:space="preserve">
    <value>文件(&amp;F)</value>
  </data>
	<data name="File_Close" xml:space="preserve">
    <value>关闭(&amp;X)</value>
  </data>
	<data name="File_Configuration" xml:space="preserve">
    <value>设置(&amp;C)...</value>
  </data>
	<data name="File_Layout" xml:space="preserve">
    <value>布局(&amp;L)</value>
  </data>
	<data name="File_Layout_Change" xml:space="preserve">
    <value>另存为(&amp;C)...</value>
  </data>
	<data name="File_Layout_Load" xml:space="preserve">
    <value>读取(&amp;L)</value>
  </data>
	<data name="File_Layout_LockLayout" xml:space="preserve">
    <value>锁定布局(&amp;T)</value>
  </data>
	<data name="File_Layout_Open" xml:space="preserve">
    <value>打开(&amp;O)...</value>
  </data>
	<data name="File_Layout_Save" xml:space="preserve">
    <value>保存(&amp;S)</value>
  </data>
	<data name="File_Layout_TopMost" xml:space="preserve">
    <value>总在最前(&amp;M)</value>
  </data>
	<data name="File_Notification" xml:space="preserve">
    <value>通知(&amp;N)</value>
  </data>
	<data name="File_Notification_MuteAll" xml:space="preserve">
    <value>静音所有通知(&amp;M)</value>
  </data>
	<data name="File_Record" xml:space="preserve">
    <value>记录(&amp;R)</value>
  </data>
	<data name="File_Record_Load" xml:space="preserve">
    <value>读取(&amp;L)</value>
  </data>
	<data name="File_Record_Save" xml:space="preserve">
    <value>保存(&amp;S)</value>
  </data>
	<data name="View" xml:space="preserve">
    <value>视图(&amp;V)</value>
  </data>
	<data name="View_Fleet" xml:space="preserve">
    <value>舰队(&amp;F)</value>
  </data>
	<data name="View_Fleet_1" xml:space="preserve">
    <value>#&amp;1</value>
  </data>
	<data name="View_Fleet_2" xml:space="preserve">
    <value>#&amp;2</value>
  </data>
	<data name="View_Fleet_3" xml:space="preserve">
    <value>#&amp;3</value>
  </data>
	<data name="View_Fleet_4" xml:space="preserve">
    <value>#&amp;4</value>
  </data>
	<data name="View_FleetOverview" xml:space="preserve">
    <value>舰队一览(&amp;O)</value>
  </data>
	<data name="View_ShipGroup" xml:space="preserve">
    <value>舰船分组(&amp;G)</value>
  </data>
	<data name="View_Dock" xml:space="preserve">
    <value>入渠(&amp;D)</value>
  </data>
	<data name="View_Arsenal" xml:space="preserve">
    <value>工厂(&amp;A)</value>
  </data>
	<data name="View_BaseAirCorps" xml:space="preserve">
    <value>基地航空队(&amp;S)</value>
  </data>
	<data name="View_Headquarters" xml:space="preserve">
    <value>司令部(&amp;H)</value>
  </data>
	<data name="View_Quest" xml:space="preserve">
    <value>任务(&amp;Q)</value>
  </data>
	<data name="View_Information" xml:space="preserve">
    <value>情报(&amp;I)</value>
  </data>
	<data name="View_Compass" xml:space="preserve">
    <value>罗盘(&amp;C)</value>
  </data>
	<data name="View_Battle" xml:space="preserve">
    <value>战斗(&amp;B)</value>
  </data>
	<data name="View_Browser" xml:space="preserve">
    <value>浏览器(&amp;M)</value>
  </data>
	<data name="View_Log" xml:space="preserve">
    <value>日志(&amp;L)</value>
  </data>
	<data name="WindowCapture" xml:space="preserve">
    <value>窗口捕获(&amp;W)</value>
  </data>
	<data name="WindowCapture_SubWindow" xml:space="preserve">
    <value>已捕获的窗口(&amp;C)</value>
  </data>
	<data name="WindowCapture_AttachAll" xml:space="preserve">
    <value>捕获所有窗口(&amp;S)</value>
  </data>
	<data name="WindowCapture_DetachAll" xml:space="preserve">
    <value>解放所有窗口(&amp;R)</value>
  </data>
	<data name="View_Json" xml:space="preserve">
    <value>JSON(&amp;J)</value>
  </data>
	<data name="Tool" xml:space="preserve">
    <value>工具(&amp;T)</value>
  </data>
	<data name="Tool_EquipmentList" xml:space="preserve">
    <value>装备一览(&amp;Q)</value>
  </data>
	<data name="Tool_DropRecord" xml:space="preserve">
    <value>掉落记录(&amp;D)</value>
  </data>
	<data name="Tool_DevelopmentRecord" xml:space="preserve">
    <value>开发记录(&amp;V)</value>
  </data>
	<data name="Tool_ConstructionRecord" xml:space="preserve">
    <value>建造记录(&amp;R)</value>
  </data>
	<data name="Tool_ResourceChart" xml:space="preserve">
    <value>资源图表(&amp;C)</value>
  </data>
	<data name="Tool_AlbumMasterShip" xml:space="preserve">
    <value>舰娘图鉴(&amp;S)</value>
  </data>
	<data name="Tool_AlbumMasterEquipment" xml:space="preserve">
    <value>装备土建(&amp;E)</value>
  </data>
	<data name="Tool_AntiAirDefense" xml:space="preserve">
    <value>对空详情(&amp;A)</value>
  </data>
	<data name="Tool_FleetImageGenerator" xml:space="preserve">
    <value>编成画像导出(&amp;F)</value>
  </data>
	<data name="Tool_BaseAirCorpsSimulation" xml:space="preserve">
    <value>基地航空队编成(&amp;B)</value>
  </data>
	<data name="Tool_ExpChecker" xml:space="preserve">
    <value>所需经验值计算(&amp;X)</value>
  </data>
	<data name="Tool_ExpeditionCheck" xml:space="preserve">
    <value>远征条件检查(&amp;M)</value>
  </data>
	<data name="Tool_KancolleProgress" xml:space="preserve">
    <value>艦これ进度</value>
  </data>
	<data name="Tool_ExtraBrowser" xml:space="preserve">
    <value>附加浏览器</value>
  </data>
	<data name="Debug" xml:space="preserve">
    <value>Debug(&amp;D)</value>
  </data>
	<data name="Debug_LoadAPIFromFile" xml:space="preserve">
    <value>从文件读取API(&amp;L)...</value>
  </data>
	<data name="Debug_LoadInitialAPI" xml:space="preserve">
    <value>读取初始化API(&amp;I)...</value>
  </data>
	<data name="Debug_LoadRecordFromOld" xml:space="preserve">
    <value>从旧api_start2读取记录 (&amp;O)...</value>
  </data>
	<data name="Debug_DeleteOldAPI" xml:space="preserve">
    <value>删除旧API数据(&amp;D)</value>
  </data>
	<data name="Debug_RenameShipResource" xml:space="preserve">
    <value>重命名舰娘资源(&amp;R)...</value>
  </data>
	<data name="Debug_LoadDataFromOld" xml:space="preserve">
    <value>从旧api_start2读取深海数据(&amp;A)...</value>
  </data>
	<data name="Help" xml:space="preserve">
    <value>帮助(&amp;H)</value>
  </data>
	<data name="Help_Help" xml:space="preserve">
    <value>在线帮助(&amp;H)...</value>
  </data>
	<data name="Help_Version" xml:space="preserve">
    <value>关于(&amp;V)</value>
  </data>
	<data name="Information" xml:space="preserve">
    <value>Now Preparing...</value>
  </data>
	<data name="Clock" xml:space="preserve">
    <value>Clock</value>
  </data>
	<data name="View_FleetPreset" xml:space="preserve">
    <value>预编成(&amp;P)</value>
  </data>
	<data name="Title" xml:space="preserve">
    <value>試製七四式電子観測儀</value>
  </data>
	<data name="Help_Issue" xml:space="preserve">
    <value>报告问题</value>
  </data>
	<data name="Help_Discord" xml:space="preserve">
    <value>加入Discord</value>
  </data>
	<data name="Help_Update" xml:space="preserve">
    <value>检查更新</value>
  </data>
	<data name="Starting" xml:space="preserve">
    <value> 启动中…</value>
  </data>
	<data name="ExitConfirmation" xml:space="preserve">
    <value>确认要关闭 {0} 吗？</value>
  </data>
	<data name="ConfirmatonCaption" xml:space="preserve">
    <value>确认</value>
  </data>
	<data name="LayoutLoaded" xml:space="preserve">
    <value>已从 {0} 还原窗口布局。</value>
  </data>
	<data name="ShipDataNotLoaded" xml:space="preserve">
    <value>舰船数据未载入。</value>
  </data>
	<data name="ErrorCaption" xml:space="preserve">
    <value>错误</value>
  </data>
	<data name="EquipmentDataNotLoaded" xml:space="preserve">
    <value>装备数据未载入。</value>
  </data>
	<data name="OpenEOWiki" xml:space="preserve">
    <value>将在外部浏览器打开页面。
确认继续吗？</value>
  </data>
	<data name="HelpCaption" xml:space="preserve">
    <value>帮助</value>
  </data>
	<data name="ReportIssue" xml:space="preserve">
    <value>将在外部浏览器打开页面。
确认继续吗？</value>
  </data>
	<data name="ReportIssueCaption" xml:space="preserve">
    <value>报告问题</value>
  </data>
	<data name="FailedToOpenBrowser" xml:space="preserve">
    <value>打开浏览器失败</value>
  </data>
	<data name="OpenLayoutCaption" xml:space="preserve">
    <value>打开布局文件</value>
  </data>
	<data name="SaveLayoutCaption" xml:space="preserve">
    <value>将布局保存到文件</value>
  </data>
	<data name="EventStartsIn" xml:space="preserve">
    <value>活动开始于 {0}</value>
  </data>
	<data name="EventHasStarted" xml:space="preserve">
    <value>活动已开始。</value>
  </data>
	<data name="EventEndsIn" xml:space="preserve">
    <value>活动结束于 {0}</value>
  </data>
	<data name="EventHasEnded" xml:space="preserve">
    <value>活动已结束。</value>
  </data>
	<data name="MaintenanceStartsIn" xml:space="preserve">
    <value>{0} 开始维护</value>
  </data>
	<data name="MaintenanceHasStarted" xml:space="preserve">
    <value>维护已开始。</value>
  </data>
	<data name="NextExerciseReset" xml:space="preserve">
    <value>下次演习重置：</value>
  </data>
	<data name="NextQuestReset" xml:space="preserve">
    <value>下次任务重置：</value>
  </data>
	<data name="MissingPermissions" xml:space="preserve">
    <value>你所使用的Windows账户没有在当前路径下写入文件的权限，请将74EO所在的文件夹移动到有权限的路径下。</value>
  </data>
	<data name="QuestDataNotLoaded" xml:space="preserve">
    <value>任务数据未载入。</value>
  </data>
	<data name="LayoutLoadFailed" xml:space="preserve">
    <value>请确认文件为有效的布局文件。
5.0.0版本对布局文件结构有破坏性变更，此前版本的布局文件已不可用。
获取更多信息或已有的布局，请参考该Github issue: https://github.com/ElectronicObserverEN/ElectronicObserver/issues/71

是否打开该 issue 页面？</value>
  </data>
	<data name="LayoutLoadFailedTitle" xml:space="preserve">
    <value>布局读取失败</value>
  </data>
	<data name="CopyingToClipboardFailed" xml:space="preserve">
    <value>复制到剪切板失败</value>
  </data>
	<data name="Adjustment" xml:space="preserve">
    <value>调整</value>
  </data>
	<data name="GridSplitterSize" xml:space="preserve">
    <value>表格分隔尺寸</value>
  </data>
	<data name="Old" xml:space="preserve">
    <value>旧</value>
  </data>
	<data name="New" xml:space="preserve">
    <value>新</value>
  </data>
	<data name="Update_DownloadUpdate" xml:space="preserve">
    <value>下载更新 (_D)</value>
  </data>
	<data name="Update_OpenReleaseNotes" xml:space="preserve">
    <value>打开更新日志 (_O)</value>
  </data>
	<data name="Update_UpdateAvailable" xml:space="preserve">
    <value>有新版本 (_U)</value>
  </data>
	<data name="Update_DownloadingUpdate" xml:space="preserve">
    <value>更新下载中({0:##0.00}%)</value>
  </data>
	<data name="Update_DownloadingUpdater" xml:space="preserve">
    <value>更新器下载中({0:##0.00}%)</value>
  </data>
	<data name="Debug_LoadBaseAPI" xml:space="preserve">
    <value>读取保存的API</value>
  </data>
</root>